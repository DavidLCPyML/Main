#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
using namespace std;

void solve() {

}

vector<pair<int,int>> points;

int main() {
    //int n, k;
    //cin >> n >> k;

    /*
    while(n--) {
        solve(k);
    }
    */

    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        int x, y;
        cin >> x >> y;
        points.push_back(make_pair(x, y));
    }

    int ans = 0;
    for (int i = 0; i < n; i++) {
        bool left = false; bool right = false; bool up = false; bool down = false;

        for (int j = 0; j < n; j++) {
            //points[i] has upper neighbor
            if (points[i].first == points[j].first && points[i].second < points[j].second) {
                up = true;
            }
            //points[i] has lower neighbor
            if (points[i].first == points[j].first && points[i].second > points[j].second) {
                down = true;
            }
            //points[i] has left neighbor
            if (points[i].first > points[j].first && points[i].second == points[j].second) {
                left = true;
            }
            //points[i] has right neighbor
            if (points[i].first < points[j].first && points[i].second == points[j].second) {
                right = true;
            }
        }
        if (up == true && right == true && left == true && down == true) {
            ans++;
        }
    }

    cout << ans << endl;

    return 0;
}

/*
Sample Input:

*/